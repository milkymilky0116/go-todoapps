package components

import "github.com/milkymilky0116/go-todoapps/internal/db"
import "fmt"

type CardProps struct {
	Todo db.Todo
}

templ Card(props CardProps) {
	<li class="flex items-center gap-4 border-2 border-white rounded-md p-2" id={ fmt.Sprintf("todo-%d", props.Todo.Id) }>
		if props.Todo.IsEditable {
			<input
				id="update-context"
				type="text"
				class="flex w-4 rounded-md border border-input px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 flex-1 bg-gray-800 text-white"
				name="update-context"
				placeholder="Edit task..."
				hx-put={ fmt.Sprintf("/edit/%d", props.Todo.Id) }
				hx-target={ fmt.Sprintf("#todo-%d", props.Todo.Id) }
				hx-swap="outerHTML"
			/>
		} else {
			<label
				class="pl-3 text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 flex-1"
				for="task-1"
			>
				if props.Todo.IsComplete {
					<p class="line-through">{ props.Todo.Context }</p>
				} else {
					<p>{ props.Todo.Context }</p>
				}
			</label>
		}
		<button
			class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:bg-white hover:text-accent-foreground h-10 w-10"
			hx-put={ fmt.Sprintf("/toggle/%d", props.Todo.Id) }
			hx-target={ fmt.Sprintf("#todo-%d", props.Todo.Id) }
			hx-swap="outerHTML"
		>
			<svg
				xmlns="http://www.w3.org/2000/svg"
				width="24"
				height="24"
				viewBox="0 0 24 24"
				fill="none"
				stroke="currentColor"
				stroke-width="2"
				stroke-linecap="round"
				stroke-linejoin="round"
				class="w-5 h-5 text-green-700"
			>
				<polyline points="20 6 9 17 4 12"></polyline>
			</svg>
		</button>
		<button
			class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:bg-white hover:text-accent-foreground h-10 w-10"
			hx-put={ fmt.Sprintf("/edit-toggle/%d", props.Todo.Id) }
			hx-target={ fmt.Sprintf("#todo-%d", props.Todo.Id) }
			hx-swap="outerHTML"
		>
			<svg
				xmlns="http://www.w3.org/2000/svg"
				width="24"
				height="24"
				viewBox="0 0 24 24"
				fill="none"
				stroke="currentColor"
				stroke-width="2"
				stroke-linecap="round"
				stroke-linejoin="round"
				class="w-5 h-5 text-green-700"
			>
				<path d="M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z"></path>
				<path d="m15 5 4 4"></path>
			</svg>
		</button>
		<button
			class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:bg-white hover:text-accent-foreground h-10 w-10"
			hx-delete={ fmt.Sprintf("/delete/%d", props.Todo.Id) }
			hx-target="#todos"
			hx-swap="outerHTML"
		>
			<svg
				xmlns="http://www.w3.org/2000/svg"
				width="24"
				height="24"
				viewBox="0 0 24 24"
				fill="none"
				stroke="currentColor"
				stroke-width="2"
				stroke-linecap="round"
				stroke-linejoin="round"
				class="w-5 h-5 text-green-700"
			>
				<path d="M3 6h18"></path>
				<path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"></path>
				<path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"></path>
			</svg>
		</button>
	</li>
}
